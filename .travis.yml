language: cpp

os: linux

matrix:
  include:
    # Windows
    - name: windows clang
      os: "windows"
      compiler: "clang"

#google test is broken
    # OSX
    - name: "osx clang"
      os: "osx"
      compiler: clang
      
    # Ubuntu
    - name: "ubuntu clang++6 gtest"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
           - clang++-6.0
           #- libgtest-dev
      env:
         - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"

    - name: "ubuntu g++8 gtest"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
           - g++-8
           #- libgtest-dev
      env:
         - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

before_install:
  eval ${MATRIX_EVAL}

install: 
  #- git clone https://github.com/google/googletest googletest/
  #- cd googletest
  #- if [ $TRAVIS_OS_NAME = 'windows' ] || [ $TRAVIS_OS_NAME = 'osx' ]; then CMAKE_CXX_STANDARD=14 cmake -DBUILD_SHARED_LIBS=ON .; fi
  #- if [ $TRAVIS_OS_NAME = 'linux' ]; then cmake .; fi
  #- cmake --build . --config Release
  #- if [ $TRAVIS_OS_NAME = 'osx' ] || [ $TRAVIS_OS_NAME = 'linux' ]; then sudo make install; fi
  #- if [ $TRAVIS_OS_NAME = 'windows' ]; then cmake --build . --target install; fi
  #- cd ..
#
  #- if [ $TRAVIS_OS_NAME = 'windows' ]; then ls googletest/lib/Release/ ; fi
  #- if [ $TRAVIS_OS_NAME = 'windows' ]; then ls googletest/googletest/ ; fi
  #- if [ $TRAVIS_OS_NAME = 'windows' ]; then find -name "*.dll"; fi
#  - if [ $TRAVIS_OS_NAME = 'linux' ]; then find -name "*.so"; fi

  #- echo `pwd`
 # - if [ $TRAVIS_OS_NAME = 'windows' ]; then cp googletest/bin/Release/gtest.dll .; fi
  #- if [ $TRAVIS_OS_NAME = 'windows' ]; then cp googletest/lib/Release/gtest.lib .; fi
  #- if [ $TRAVIS_OS_NAME = 'linux' ]; then cp googletest/lib/libgtest.so .; fi
  #- if [ $TRAVIS_OS_NAME = 'linux' ]; then set LD_LIBRARY_PATH=$PWD:$LD_LIBRARY_PATH; fi
  
script:
  - echo "SCRIPT"
  - pwd
  - ls

  - cmake --version
  - cmake .
  - cmake --build .
  - if [ $TRAVIS_OS_NAME = 'linux' ] || [ $TRAVIS_OS_NAME = 'osx' ]; then sudo make install; fi
#  - if [ $TRAVIS_OS_NAME = 'windows' ]; then cmake --build . --target install; fi
#  - if [ $TRAVIS_OS_NAME != 'windows' ]; then ./igris_test; fi
#  - if [ $TRAVIS_OS_NAME != 'windows' ]; then ctest .; fi
  - ctest .